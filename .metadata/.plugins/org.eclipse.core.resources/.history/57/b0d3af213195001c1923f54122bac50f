package com.cts.moviecruiser.movieportal.controller;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import com.cts.moviecruiser.movieportal.client.MovieClientRest;
import com.cts.moviecruiser.movieportal.model.LoginModel;
import com.cts.moviecruiser.movieportal.model.Movie;
import com.cts.moviecruiser.movieportal.model.MovieResponse;

import lombok.extern.slf4j.Slf4j;

@RestController
@RequestMapping("/movies")
@Slf4j
public class MovieController {
	
	@Autowired
	MovieClientRest clientRest;
	
	static List<Movie> list;
	
	@GetMapping("/movie-list")
	public List<Movie> getAllMovies(){
		log.info("Entering movie controllere");
		return clientRest.getAllMovies();
	}
//	@GetMapping("/admin")
//	public List<Movie> getAllMoviesAdmin(){
//		log.info("Entering movie controllere");
//		return clientRest.getAllMovies();
//	}
//	@PutMapping("/{id}")
//	public ResponseEntity<MovieResponse> updateMovie(@PathVariable("id") long movieId,@RequestBody Movie movie) {
//		return clientRest.modifyMovie(movieId, movie);
//		
//	}
	@RequestMapping(value = "/edit-menu-item-success", method = RequestMethod.POST)
    public ModelAndView successEditMovie(@ModelAttribute("editMovie") Movie movie,ModelMap model)
    {

		clientRest.modifyMovie(movie.getId(), movie);
		list=clientRest.getAllMovies();
		
		model.put("inf", list);
		ModelAndView mv = new ModelAndView("movie-list-admin");
		mv.addObject("model", new LoginModel());
		return mv;
    }
	@GetMapping("/admin")
	public ModelAndView admin(ModelMap map) {
			list=clientRest.getAllMovies();
			map.put("inf", list);
			ModelAndView mv = new ModelAndView("movie-list-admin");
			mv.addObject("model", new LoginModel());
			return mv;
	
	}



	@RequestMapping(value = "/edit", method = RequestMethod.GET)
    public ModelAndView toEditMovie(@RequestParam int id,@RequestParam String title,@RequestParam String dol,@RequestParam String box,@RequestParam String genre,ModelMap model)throws Exception
    {
		
		
		DateFormat inputFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S");
        String outputString =null;
        if(!dol.isEmpty()) {
        Date date = inputFormat.parse(dol);
 
        // Format date into output format
        DateFormat outputFormat = new SimpleDateFormat("yyyy/MM/dd");
        outputString = outputFormat.format(date);
        }
        //
        model.addAttribute("editMovie", new Movie());
        model.addAttribute("Movieid",id);
        model.addAttribute("title",title);

        model.addAttribute("dol",outputString.toString());
        model.addAttribute("boxOffice",box);
        model.addAttribute("genre",genre);
        ModelAndView mv = new ModelAndView("edit-menu-item");
		mv.addObject("model", new LoginModel());
		return mv;
    }
	
	
	
	
}
